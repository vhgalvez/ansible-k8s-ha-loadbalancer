# templates/haproxy/haproxy.cfg.j2
# --------------------
# Configuraci√≥n Global HAProxy
# --------------------
global
    log stdout format raw local0
    maxconn 4096
    stats socket {{ haproxy_socket_file }} mode 660 level admin expose-fd listeners
    user haproxy
    group haproxy
    pidfile /run/haproxy.pid
    daemon
    master-worker

# --------------------
# Valores por defecto
# --------------------
defaults
    log     global
    mode    tcp
    option  dontlognull
    option  log-health-checks
    timeout connect 5s
    timeout client  50s
    timeout server  50s
    option  accept-invalid-http-response

# -------------------------------
# Frontend para Kubernetes API
# VIP: {{ api_vip }}:6443
# -------------------------------
frontend kubernetes_api
    bind {{ api_vip }}:6443
    mode tcp
    option tcplog
    default_backend kubernetes_masters

backend kubernetes_masters
    mode tcp
    balance roundrobin
    option tcp-check
    tcp-check connect port 6443
    default-server inter 3s fall 2 rise 2 on-marked-down shutdown-sessions
{% for host in groups['masters'] %}
    server master-{{ loop.index }} {{ hostvars[host]['ansible_host'] }}:6443 check
{% endfor %}

# -----------------------------------------------------
# Frontend HTTP (Ingress)
# VIP: {{ second_vip }}:80
# -----------------------------------------------------
frontend http_ingress
    bind {{ second_vip }}:80
    mode tcp
    option tcplog
    default_backend ingress_http_servers

backend ingress_http_servers
    mode tcp
    balance roundrobin
    default-server inter 5s fall 2 rise 2 on-marked-down shutdown-sessions
{% for host in groups['workers'] %}
    server worker-http-{{ loop.index }} {{ hostvars[host]['ansible_host'] }}:80 check
{% endfor %}

# -----------------------------------------------------
# Frontend HTTPS (Ingress SSL Passthrough)
# VIP: {{ second_vip }}:443
# -----------------------------------------------------
frontend https_ingress
    bind {{ second_vip }}:443
    mode tcp
    option tcplog
    default_backend ingress_https_servers

backend ingress_https_servers
    mode tcp
    balance roundrobin
    option ssl-hello-chk
    default-server inter 5s fall 2 rise 2 on-marked-down shutdown-sessions
{% for host in groups['workers'] %}
    server worker-https-{{ loop.index }} {{ hostvars[host]['ansible_host'] }}:443 check
{% endfor %}