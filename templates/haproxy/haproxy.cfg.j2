# templates/haproxy/haproxy.cfg.j2
# ================================
# CONFIGURACIÓN GLOBAL DE HAProxy
# ================================

global
    log /dev/log local0                         # Registro del sistema (syslog)
    log /dev/log local1 notice
    daemon                                      # Ejecutar como daemon
    maxconn 2048                               # Conexiones máximas
    user haproxy
    group haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    pidfile /run/haproxy.pid

defaults
    log     global
    mode    http                                # Por defecto HTTP (pero frontend puede cambiar)
    option  httplog
    option  dontlognull
    timeout connect 5s
    timeout client  30s
    timeout server  30s
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# ===============================================================
# FRONTEND Y BACKEND PARA KUBERNETES API SERVER (VIP: {{ api_vip }}:6443)
# ===============================================================
frontend k8s_api
    bind {{ api_vip }}:6443                    # Dirección IP virtual para el API server
    mode tcp
    option tcplog
    default_backend k8s_api_backend

backend k8s_api_backend
    mode tcp
    balance roundrobin
    option tcp-check
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
    {% for host in groups['masters'] %}
    server master-{{ loop.index }} {{ hostvars[host]['ansible_host'] }}:6443 check
    {% endfor %}

# ===============================================================
# FRONTEND Y BACKEND PARA INGRESO HTTP (VIP: {{ second_vip }}:80)
# ===============================================================
frontend ingress_http
    bind {{ second_vip }}:80
    mode tcp
    option tcplog
    default_backend ingress_http_backend

backend ingress_http_backend
    mode tcp
    balance roundrobin
    option tcp-check
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
    {% for host in groups['workers'] %}
    server worker-http-{{ loop.index }} {{ hostvars[host]['ansible_host'] }}:80 check
    {% endfor %}

# ===============================================================
# FRONTEND Y BACKEND PARA INGRESO HTTPS (VIP: {{ second_vip }}:443)
# ===============================================================
frontend ingress_https
    bind {{ second_vip }}:443
    mode tcp
    option tcplog
    default_backend ingress_https_backend

backend ingress_https_backend
    mode tcp
    balance roundrobin
    option ssl-hello-chk
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
    {% for host in groups['workers'] %}
    server worker-https-{{ loop.index }} {{ hostvars[host]['ansible_host'] }}:443 check
    {% endfor %}

# ===============================================================
# INTERFAZ WEB DE ESTADÍSTICAS DE HAProxy (opcional)
# ===============================================================
listen stats
    bind *:9000                                 # Cambia si deseas limitar a una IP específica
    mode http
    stats enable
    stats uri /
    stats refresh 10s
    stats show-node

    