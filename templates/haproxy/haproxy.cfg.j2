# templates/haproxy/haproxy.cfg.j2

# ================================
# Configuración Global de HAProxy
# ================================
global
    log /dev/log local0
    log /dev/log local1 notice
    daemon
    maxconn 2048
    user haproxy
    group haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    pidfile /run/haproxy.pid

# =========================
# Configuración por defecto
# =========================
defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5s
    timeout client  30s
    timeout server  30s
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# ==================================
# VIP 10.17.5.10 - API SERVER K3s
# ==================================
frontend k8s_api
    bind 10.17.5.10:6443
    mode tcp
    option tcplog
    default_backend k8s_api_backend

backend k8s_api_backend
    mode tcp
    balance roundrobin
    option tcp-check
    default-server inter 3s fall 3 rise 2
    server master1 10.17.4.21:6443 check
    server master2 10.17.4.22:6443 check
    server master3 10.17.4.23:6443 check

# ==========================================
# VIP 10.17.5.30 - INGRESS CONTROLLER HTTP
# ==========================================
frontend ingress_http
    bind 10.17.5.30:80
    mode tcp
    option tcplog
    default_backend ingress_http_backend

backend ingress_http_backend
    mode tcp
    balance roundrobin
    option tcp-check
    default-server inter 3s fall 3 rise 2
    server worker1 10.17.4.24:80 check
    server worker2 10.17.4.25:80 check
    server worker3 10.17.4.26:80 check

# ===========================================
# VIP 10.17.5.30 - INGRESS CONTROLLER HTTPS
# ===========================================
frontend ingress_https
    bind 10.17.5.30:443
    mode tcp
    option tcplog
    default_backend ingress_https_backend

backend ingress_https_backend
    mode tcp
    balance roundrobin
    option tcp-check
    default-server inter 3s fall 3 rise 2
    server worker1 10.17.4.24:443 check
    server worker2 10.17.4.25:443 check
    server worker3 10.17.4.26:443 check

# ======================
# STATS (opcional)
# ======================
listen stats
    bind *:9000
    mode http
    stats enable
    stats uri /
    stats refresh 10s
    stats show-node

